{
    "title": "Amazon FSx",
    "description": "Amazon FSx is a fully managed service that makes it easy for storage and application administrators to launch and use shared file storage.",
    "docsUrl": "https://aws.amazon.com/fsx/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/fsx/2018-03-01/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://fsx.amazonaws.com/",
                    "http://fsx.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "CreateBackup": {
            "main": "./lib/actions/CreateBackup.js",
            "title": "CreateBackup",
            "description": "Creates a backup of an existing Amazon FSx for Windows File Server file system.\nCreating regular backups for your file system is a best practice that\ncomplements the replication that Amazon FSx for Windows File Server performs for\nyour file system. It also enables you to restore from user modification of data.\n\nIf a backup with the specified client request token exists, and the parameters\nmatch, this operation returns the description of the existing backup. If a\nbackup specified client request token exists, and the parameters don't match,\nthis operation returns IncompatibleParameterError. If a backup with the\nspecified client request token doesn't exist, CreateBackup does the following: \n\n *  Creates a new Amazon FSx backup with an assigned ID, and an initial\n   lifecycle state of CREATING.\n   \n   \n *  Returns the description of the backup.\n   \n   \n\nBy using the idempotent operation, you can retry a CreateBackup operation\nwithout the risk of creating an extra backup. This approach can be useful when\nan initial call fails in a way that makes it unclear whether a backup was\ncreated. If you use the same client request token and the initial call created a\nbackup, the operation returns a successful result because all the parameters are\nthe same.\n\nThe CreateFileSystem operation returns while the backup's lifecycle state is\nstill CREATING. You can check the file system creation status by calling the \nDescribeBackups operation, which returns the backup state along with other\ninformation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateBackup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateFileSystem": {
            "main": "./lib/actions/CreateFileSystem.js",
            "title": "CreateFileSystem",
            "description": "Creates a new, empty Amazon FSx file system.\n\nIf a file system with the specified client request token exists and the\nparameters match, CreateFileSystem returns the description of the existing file\nsystem. If a file system specified client request token exists and the\nparameters don't match, this call returns IncompatibleParameterError. If a file\nsystem with the specified client request token doesn't exist, CreateFileSystem \ndoes the following: \n\n *  Creates a new, empty Amazon FSx file system with an assigned ID, and an\n   initial lifecycle state of CREATING.\n   \n   \n *  Returns the description of the file system.\n   \n   \n\nThis operation requires a client request token in the request that Amazon FSx\nuses to ensure idempotent creation. This means that calling the operation\nmultiple times with the same client request token has no effect. By using the\nidempotent operation, you can retry a CreateFileSystem operation without the\nrisk of creating an extra file system. This approach can be useful when an\ninitial call fails in a way that makes it unclear whether a file system was\ncreated. Examples are if a transport level timeout occurred, or your connection\nwas reset. If you use the same client request token and the initial call created\na file system, the client receives success as long as the parameters are the\nsame.\n\nThe CreateFileSystem call returns while the file system's lifecycle state is\nstill CREATING. You can check the file-system creation status by calling the \nDescribeFileSystems operation, which returns the file system state along with\nother information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateFileSystem.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateFileSystemFromBackup": {
            "main": "./lib/actions/CreateFileSystemFromBackup.js",
            "title": "CreateFileSystemFromBackup",
            "description": "Creates a new Amazon FSx file system from an existing Amazon FSx for Windows\nFile Server backup.\n\nIf a file system with the specified client request token exists and the\nparameters match, this call returns the description of the existing file system.\nIf a client request token specified by the file system exists and the parameters\ndon't match, this call returns IncompatibleParameterError. If a file system with\nthe specified client request token doesn't exist, this operation does the\nfollowing:\n\n *  Creates a new Amazon FSx file system from backup with an assigned ID, and an\n   initial lifecycle state of CREATING.\n   \n   \n *  Returns the description of the file system.\n   \n   \n\nParameters like Active Directory, default share name, automatic backup, and\nbackup settings default to the parameters of the file system that was backed up,\nunless overridden. You can explicitly supply other settings.\n\nBy using the idempotent operation, you can retry a CreateFileSystemFromBackup \ncall without the risk of creating an extra file system. This approach can be\nuseful when an initial call fails in a way that makes it unclear whether a file\nsystem was created. Examples are if a transport level timeout occurred, or your\nconnection was reset. If you use the same client request token and the initial\ncall created a file system, the client receives success as long as the\nparameters are the same.\n\nThe CreateFileSystemFromBackup call returns while the file system's lifecycle\nstate is still CREATING. You can check the file-system creation status by\ncalling the DescribeFileSystems operation, which returns the file system state\nalong with other information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateFileSystemFromBackup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteBackup": {
            "main": "./lib/actions/DeleteBackup.js",
            "title": "DeleteBackup",
            "description": "Deletes an Amazon FSx for Windows File Server backup, deleting its contents.\nAfter deletion, the backup no longer exists, and its data is gone.\n\nThe DeleteBackup call returns instantly. The backup will not show up in later \nDescribeBackups calls.\n\nThe data in a deleted backup is also deleted and can't be recovered by any\nmeans.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteBackup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteFileSystem": {
            "main": "./lib/actions/DeleteFileSystem.js",
            "title": "DeleteFileSystem",
            "description": "Deletes a file system, deleting its contents. After deletion, the file system no\nlonger exists, and its data is gone. Any existing automatic backups will also be\ndeleted.\n\nBy default, when you delete an Amazon FSx for Windows File Server file system, a\nfinal backup is created upon deletion. This final backup is not subject to the\nfile system's retention policy, and must be manually deleted.\n\nThe DeleteFileSystem action returns while the file system has the DELETING \nstatus. You can check the file system deletion status by calling the \nDescribeFileSystems action, which returns a list of file systems in your\naccount. If you pass the file system ID for a deleted file system, the \nDescribeFileSystems returns a FileSystemNotFound error.\n\nThe data in a deleted file system is also deleted and can't be recovered by any\nmeans.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteFileSystem.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeBackups": {
            "main": "./lib/actions/DescribeBackups.js",
            "title": "DescribeBackups",
            "description": "Returns the description of specific Amazon FSx for Windows File Server backups,\nif a BackupIds value is provided for that backup. Otherwise, it returns all\nbackups owned by your AWS account in the AWS Region of the endpoint that you're\ncalling.\n\nWhen retrieving all backups, you can optionally specify the MaxResults parameter\nto limit the number of backups in a response. If more backups remain, Amazon FSx\nreturns a NextToken value in the response. In this case, send a later request\nwith the NextToken request parameter set to the value of NextToken from the last\nresponse.\n\nThis action is used in an iterative process to retrieve a list of your backups. \nDescribeBackups is called first without a NextTokenvalue. Then the action\ncontinues to be called with the NextToken parameter set to the value of the last \nNextToken value until a response has no NextToken.\n\nWhen using this action, keep the following in mind:\n\n *  The implementation might return fewer than MaxResults file system\n   descriptions while still including a NextToken value.\n   \n   \n *  The order of backups returned in the response of one DescribeBackups call and\n   the order of backups returned across the responses of a multi-call iteration\n   is unspecified.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeBackups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeFileSystems": {
            "main": "./lib/actions/DescribeFileSystems.js",
            "title": "DescribeFileSystems",
            "description": "Returns the description of specific Amazon FSx file systems, if a FileSystemIds \nvalue is provided for that file system. Otherwise, it returns descriptions of\nall file systems owned by your AWS account in the AWS Region of the endpoint\nthat you're calling.\n\nWhen retrieving all file system descriptions, you can optionally specify the \nMaxResults parameter to limit the number of descriptions in a response. If more\nfile system descriptions remain, Amazon FSx returns a NextToken value in the\nresponse. In this case, send a later request with the NextToken request\nparameter set to the value of NextToken from the last response.\n\nThis action is used in an iterative process to retrieve a list of your file\nsystem descriptions. DescribeFileSystems is called first without a NextToken\nvalue. Then the action continues to be called with the NextToken parameter set\nto the value of the last NextToken value until a response has no NextToken.\n\nWhen using this action, keep the following in mind:\n\n *  The implementation might return fewer than MaxResults file system\n   descriptions while still including a NextToken value.\n   \n   \n *  The order of file systems returned in the response of one DescribeFileSystems \n   call and the order of file systems returned across the responses of a\n   multicall iteration is unspecified.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeFileSystems.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTagsForResource": {
            "main": "./lib/actions/ListTagsForResource.js",
            "title": "ListTagsForResource",
            "description": "Lists tags for an Amazon FSx file systems and backups in the case of Amazon FSx\nfor Windows File Server.\n\nWhen retrieving all tags, you can optionally specify the MaxResults parameter to\nlimit the number of tags in a response. If more tags remain, Amazon FSx returns\na NextToken value in the response. In this case, send a later request with the \nNextToken request parameter set to the value of NextToken from the last\nresponse.\n\nThis action is used in an iterative process to retrieve a list of your tags. \nListTagsForResource is called first without a NextTokenvalue. Then the action\ncontinues to be called with the NextToken parameter set to the value of the last \nNextToken value until a response has no NextToken.\n\nWhen using this action, keep the following in mind:\n\n *  The implementation might return fewer than MaxResults file system\n   descriptions while still including a NextToken value.\n   \n   \n *  The order of tags returned in the response of one ListTagsForResource call\n   and the order of tags returned across the responses of a multi-call iteration\n   is unspecified.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTagsForResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "TagResource": {
            "main": "./lib/actions/TagResource.js",
            "title": "TagResource",
            "description": "Tags an Amazon FSx resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/TagResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UntagResource": {
            "main": "./lib/actions/UntagResource.js",
            "title": "UntagResource",
            "description": "This action removes a tag from an Amazon FSx resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UntagResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateFileSystem": {
            "main": "./lib/actions/UpdateFileSystem.js",
            "title": "UpdateFileSystem",
            "description": "Updates a file system configuration.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateFileSystem.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}